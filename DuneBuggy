#include <NewPing.h>
//Line Sensor
int left,center,right; //bool line sensor values
int lastTurn; // 0 is left and 1 is right

//Ultrasonic
#define TRIGGER_PIN  7  
// Arduino pin tied to trigger(OUTPUT)
#define ECHO_PIN     8  
// Arduino pin tied to echo(INPUT)
#define MAX_DISTANCE 200 
// Maximum distance we want to ping
#define DISTANCE 15
// Minimum distance from sensor 

NewPing sonar(TRIGGER_PIN, ECHO_PIN, MAX_DISTANCE);
int cur_distance;

void setup() {
  //Motor
  pinMode(12, OUTPUT);
  pinMode(13, OUTPUT);
  //Ultrasonic
  pinMode(TRIGGER_PIN, OUTPUT);
  pinMode(ECHO_PIN, INPUT);
  //IR
  pinMode(3,INPUT);
  pinMode(4,INPUT);
  pinMode(5,INPUT);
  Serial.begin(9600);
}

void loop() {
  cur_distance = sonar.ping_cm();
  delay(10);
  while (cur_distance <= DISTANCE){
   Stop();
  }
   readLine();
   delay(10);
   followLine();
}

void readLine(){
 left = digitalRead(3);
 center = digitalRead(4);
 right = digitalRead(5);
}

void followLine(){
  if(left == 1 && center == 1 && right == 1){
    Stop();
  } else if (left == 1){
    Left();
    lastTurn = 0;
  } else if (right == 1){
    Right();
    lastTurn = 1;
  } else if (center == 1) {
     Forward();
  } else if (left == 0 && center == 0 && right == 0){
    if (lastTurn == 0){
      Right();
    } else{
      Left();
    }
  }
}


void lineDebug(){
 Serial.print("L");
 Serial.print(left);
 Serial.print(" C");
 Serial.print(center);
 Serial.print(" R");
 Serial.print(right);
 Serial.println();
 delay(100);
}


void Forward(){
  digitalWrite(12, HIGH);
  analogWrite(10, 200);
  digitalWrite(13, LOW);
  analogWrite(11, 200);
}

void Backward(){
  digitalWrite(12, LOW);
  analogWrite(10, 200);
  digitalWrite(13, HIGH);
  analogWrite(11, 200);
}

void Left(){
  digitalWrite(12, HIGH);
  analogWrite(10, 200);
  digitalWrite(13, HIGH);
  analogWrite(11, 200);
}
void Right(){
  digitalWrite(12, LOW);
  analogWrite(10, 200);
  digitalWrite(13, LOW);
  analogWrite(11, 200);
}
void Stop(){
  digitalWrite(12, HIGH);
  analogWrite(10, 0);
  digitalWrite(13, LOW);
  analogWrite(11, 0);
} 
