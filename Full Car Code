//Include Libraries
#include <NewPing.h>
#include <Servo.h>

//Define Pins (Motors)
#define MOTOR_A_DIRECTION 12
#define MOTOR_B_DIRECTION 13 
#define MOTOR_A_SPEED 10
#define MOTOR_B_SPEED 11 
#define SPEAKER 4
#define SERVO 9

//Define Pins (Ultrasonic)
#define TRIGGER_PIN  7      // Arduino pin tied to sensor trigger(OUTPUT)
#define ECHO_PIN     8      // Arduino pin tied to sensor echo(INPUT)
#define MAX_DISTANCE 200    // Maximum distance we want to ping with sensor
#define DISTANCE 15         // Minimum distance we want to ping with sensor 

//Define Variables
int distanceLeft;
int distanceRight;
int distanceForward;

//Define Objects - Ultrasonic Sensor
NewPing sonar(TRIGGER_PIN, ECHO_PIN, MAX_DISTANCE);
Servo frontServo;

//Setup Loop
void setup(){
  pinMode(MOTOR_A_DIRECTION, OUTPUT); 
  pinMode(MOTOR_B_DIRECTION, OUTPUT); 
  pinMode(TRIGGER_PIN, OUTPUT); //US Sensor
  pinMode(ECHO_PIN, INPUT);     //US Sensor
  pinMode(SPEAKER, OUTPUT); 
  frontServo.attach(SERVO);
  Serial.begin(9600);
}

void loop() {
Serial.println("Start Loop");
distanceForward = sonar.ping_cm();
Serial.println("Forward:");
Serial.println(distanceForward);
if (distanceForward <= 20 ){
    Stop();
    delay(1000);
    LookLeft();
    Serial.println("Left:");
    Serial.println(distanceLeft);
    delay(200);
    LookRight();
    Serial.println("Right:");
    Serial.println(distanceRight);
    delay(300);
    LookForward();
      if (distanceLeft > distanceRight){
        TurnLeft();
      }else{
        TurnRight();
      }
  }else{
    Serial.println("Forward!");
    Forward();
    delay(500);
  }
}


void Forward(){
  digitalWrite(MOTOR_A_DIRECTION, HIGH);
  analogWrite(MOTOR_A_SPEED, 200);
  digitalWrite(MOTOR_B_DIRECTION, LOW);
  analogWrite(MOTOR_B_SPEED, 200);
}

void Backward(){
  digitalWrite(MOTOR_A_DIRECTION, LOW);
  analogWrite(MOTOR_A_SPEED, 200);
  digitalWrite(MOTOR_B_DIRECTION, HIGH);
  analogWrite(MOTOR_B_SPEED, 200);
}

void TurnLeft(){
  digitalWrite(MOTOR_A_DIRECTION, HIGH);
  analogWrite(MOTOR_A_SPEED, 200);
  digitalWrite(MOTOR_B_DIRECTION, HIGH);
  analogWrite(MOTOR_B_SPEED, 100);
}

void TurnRight(){
  digitalWrite(MOTOR_A_DIRECTION, LOW);
  analogWrite(MOTOR_A_SPEED, 100);
  digitalWrite(MOTOR_B_DIRECTION, LOW);
  analogWrite(MOTOR_B_SPEED, 200);
}

void Stop(){
  digitalWrite(MOTOR_A_DIRECTION, LOW);
  analogWrite(MOTOR_A_SPEED, 0);
  digitalWrite(MOTOR_B_DIRECTION, LOW);
  analogWrite(MOTOR_B_SPEED, 0);
}

void LookLeft(){
   frontServo.write(30);
   delay(1000);
   distanceLeft = sonar.ping_cm();
   //Beep();
}
void LookForward(){
   frontServo.write(90);
   delay(1000);
   //Beep();
}
void LookRight(){
   frontServo.write(150);
   delay(1000);
   distanceRight = sonar.ping_cm();
   //Beep();
}

void Beep(){
  digitalWrite(SPEAKER, HIGH);
  delay(150); 
  digitalWrite(SPEAKER,LOW); 
  delay(10); 
}
